{
  pkgs = hackage:
    {
      packages = {
        "butcher".revision = (((hackage."butcher")."1.3.3.2").revisions).default;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "lsp".revision = (((hackage."lsp")."1.2.0.1").revisions).default;
        "lsp".flags.demo = false;
        "hlint".revision = (((hackage."hlint")."3.2.7").revisions).default;
        "hlint".flags.threaded = true;
        "hlint".flags.ghc-lib = false;
        "hlint".flags.gpl = true;
        "hlint".flags.hsyaml = false;
        "binary".revision = (((hackage."binary")."0.8.8.0").revisions).default;
        "dependent-sum".revision = (((hackage."dependent-sum")."0.7.1.0").revisions).default;
        "heaps".revision = (((hackage."heaps")."0.4").revisions).default;
        "ghc-boot".revision = (((hackage."ghc-boot")."8.10.7").revisions).default;
        "data-tree-print".revision = (((hackage."data-tree-print")."0.1.0.2").revisions).default;
        "rope-utf16-splay".revision = (((hackage."rope-utf16-splay")."0.3.2.0").revisions).default;
        "streaming-commons".revision = (((hackage."streaming-commons")."0.2.2.1").revisions).default;
        "streaming-commons".flags.use-bytestring-builder = false;
        "hslogger".revision = (((hackage."hslogger")."1.3.1.0").revisions).default;
        "hslogger".flags.network--gt-3_0_0 = true;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.11").revisions).default;
        "bifunctors".flags.tagged = true;
        "bifunctors".flags.semigroups = true;
        "lucid".revision = (((hackage."lucid")."2.9.12.1").revisions).default;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.6.1").revisions).default;
        "regex-tdfa".revision = (((hackage."regex-tdfa")."1.3.1.1").revisions).default;
        "regex-tdfa".flags.force-o2 = false;
        "monoid-subclasses".revision = (((hackage."monoid-subclasses")."1.1.1").revisions).default;
        "hashtables".revision = (((hackage."hashtables")."1.2.4.1").revisions).default;
        "hashtables".flags.portable = false;
        "hashtables".flags.detailed-profiling = false;
        "hashtables".flags.unsafe-tricks = true;
        "hashtables".flags.bounds-checking = false;
        "hashtables".flags.debug = false;
        "hashtables".flags.sse42 = false;
        "cryptohash-sha1".revision = (((hackage."cryptohash-sha1")."0.11.100.1").revisions).default;
        "refact".revision = (((hackage."refact")."0.3.0.2").revisions).default;
        "ghc-check".revision = (((hackage."ghc-check")."0.5.0.6").revisions).default;
        "ghc-check".flags.ghc-check-use-package-abis = true;
        "terminal-size".revision = (((hackage."terminal-size")."0.3.2.1").revisions).default;
        "monad-dijkstra".revision = (((hackage."monad-dijkstra")."0.1.1.3").revisions).default;
        "lsp-test".revision = (((hackage."lsp-test")."0.14.0.1").revisions).default;
        "Only".revision = (((hackage."Only")."0.1").revisions).default;
        "blaze-builder".revision = (((hackage."blaze-builder")."0.4.2.1").revisions).default;
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "parsers".revision = (((hackage."parsers")."0.12.10").revisions).default;
        "parsers".flags.binary = true;
        "parsers".flags.parsec = true;
        "parsers".flags.attoparsec = true;
        "base-compat".revision = (((hackage."base-compat")."0.12.0").revisions).default;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11").revisions).default;
        "ansi-terminal".flags.example = false;
        "js-jquery".revision = (((hackage."js-jquery")."3.3.1").revisions).default;
        "unliftio-core".revision = (((hackage."unliftio-core")."0.2.0.1").revisions).default;
        "strict-list".revision = (((hackage."strict-list")."0.1.6").revisions).default;
        "free".revision = (((hackage."free")."5.1.7").revisions).default;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "sorted-list".revision = (((hackage."sorted-list")."0.2.1.0").revisions).default;
        "time-compat".revision = (((hackage."time-compat")."1.9.6.1").revisions).default;
        "time-compat".flags.old-locale = false;
        "yaml".revision = (((hackage."yaml")."0.11.6.0").revisions).default;
        "yaml".flags.no-exe = true;
        "yaml".flags.no-examples = true;
        "heapsize".revision = (((hackage."heapsize")."0.3.0.1").revisions).default;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "hspec-expectations".revision = (((hackage."hspec-expectations")."0.8.2").revisions).default;
        "hls-hlint-plugin".revision = (((hackage."hls-hlint-plugin")."1.0.1.1").revisions).default;
        "hls-hlint-plugin".flags.hlint33 = false;
        "hls-hlint-plugin".flags.ghc-lib = false;
        "hls-hlint-plugin".flags.pedantic = false;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.0.3.0").revisions).default;
        "psqueues".revision = (((hackage."psqueues")."0.2.7.2").revisions).default;
        "mono-traversable".revision = (((hackage."mono-traversable")."1.0.15.3").revisions).default;
        "conduit-extra".revision = (((hackage."conduit-extra")."1.3.5").revisions).default;
        "call-stack".revision = (((hackage."call-stack")."0.4.0").revisions).default;
        "bytestring-encoding".revision = (((hackage."bytestring-encoding")."0.1.1.0").revisions).default;
        "safe".revision = (((hackage."safe")."0.3.19").revisions).default;
        "template-haskell".revision = (((hackage."template-haskell")."2.16.0.0").revisions).default;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.7").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "vector".revision = (((hackage."vector")."0.12.3.1").revisions).default;
        "vector".flags.unsafechecks = false;
        "vector".flags.internalchecks = false;
        "vector".flags.boundschecks = true;
        "vector".flags.wall = false;
        "data-default-instances-old-locale".revision = (((hackage."data-default-instances-old-locale")."0.0.1").revisions).default;
        "conduit".revision = (((hackage."conduit")."1.3.4.2").revisions).default;
        "hls-plugin-api".revision = (((hackage."hls-plugin-api")."1.2.0.1").revisions).default;
        "hls-plugin-api".flags.pedantic = false;
        "constraints".revision = (((hackage."constraints")."0.13").revisions).default;
        "algebraic-graphs".revision = (((hackage."algebraic-graphs")."0.5").revisions).default;
        "hls-refine-imports-plugin".revision = (((hackage."hls-refine-imports-plugin")."1.0.0.1").revisions).default;
        "network".revision = (((hackage."network")."3.1.2.2").revisions).default;
        "network".flags.devel = false;
        "HUnit".revision = (((hackage."HUnit")."1.6.2.0").revisions).default;
        "ormolu".revision = (((hackage."ormolu")."0.1.4.1").revisions).default;
        "ormolu".flags.dev = false;
        "Glob".revision = (((hackage."Glob")."0.10.1").revisions).default;
        "implicit-hie-cradle".revision = (((hackage."implicit-hie-cradle")."0.3.0.5").revisions).default;
        "apply-refact".revision = (((hackage."apply-refact")."0.9.3.0").revisions).default;
        "conduit-parse".revision = (((hackage."conduit-parse")."0.2.1.0").revisions).default;
        "conduit-parse".flags.enable-hlint-test = false;
        "direct-sqlite".revision = (((hackage."direct-sqlite")."2.3.26").revisions).default;
        "direct-sqlite".flags.urifilenames = true;
        "direct-sqlite".flags.haveusleep = true;
        "direct-sqlite".flags.json1 = true;
        "direct-sqlite".flags.fulltextsearch = true;
        "direct-sqlite".flags.systemlib = false;
        "hls-floskell-plugin".revision = (((hackage."hls-floskell-plugin")."1.0.0.1").revisions).default;
        "hls-graph".revision = (((hackage."hls-graph")."1.4.0.0").revisions).default;
        "hls-graph".flags.pedantic = false;
        "monad-memo".revision = (((hackage."monad-memo")."0.5.3").revisions).default;
        "dlist".revision = (((hackage."dlist")."1.0").revisions).default;
        "dlist".flags.werror = false;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "async".revision = (((hackage."async")."2.2.4").revisions).default;
        "async".flags.bench = false;
        "hls-module-name-plugin".revision = (((hackage."hls-module-name-plugin")."1.0.0.1").revisions).default;
        "process".revision = (((hackage."process")."1.6.13.2").revisions).default;
        "monad-control".revision = (((hackage."monad-control")."1.0.3.1").revisions).default;
        "random".revision = (((hackage."random")."1.2.1").revisions).default;
        "unix-compat".revision = (((hackage."unix-compat")."0.5.3").revisions).default;
        "unix-compat".flags.old-time = false;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.16.1.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "hspec-discover".revision = (((hackage."hspec-discover")."2.7.10").revisions).default;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.old-random = false;
        "QuickCheck".flags.templatehaskell = true;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.5").revisions).default;
        "scientific".revision = (((hackage."scientific")."0.3.7.0").revisions).default;
        "scientific".flags.integer-simple = false;
        "scientific".flags.bytestring-builder = false;
        "hscolour".revision = (((hackage."hscolour")."1.24.4").revisions).default;
        "entropy".revision = (((hackage."entropy")."0.4.1.6").revisions).default;
        "entropy".flags.halvm = false;
        "hpc".revision = (((hackage."hpc")."0.6.1.0").revisions).default;
        "hls-retrie-plugin".revision = (((hackage."hls-retrie-plugin")."1.0.1.2").revisions).default;
        "hls-explicit-imports-plugin".revision = (((hackage."hls-explicit-imports-plugin")."1.0.1.0").revisions).default;
        "hls-fourmolu-plugin".revision = (((hackage."hls-fourmolu-plugin")."1.0.0.2").revisions).default;
        "prettyprinter".revision = (((hackage."prettyprinter")."1.7.1").revisions).default;
        "prettyprinter".flags.buildreadme = false;
        "prettyprinter".flags.text = true;
        "th-extras".revision = (((hackage."th-extras")."0.0.0.4").revisions).default;
        "th-extras".flags.base4 = true;
        "quickcheck-io".revision = (((hackage."quickcheck-io")."0.2.0").revisions).default;
        "alex".revision = (((hackage."alex")."3.2.6").revisions).default;
        "alex".flags.small_base = true;
        "tasty-hunit".revision = (((hackage."tasty-hunit")."0.10.0.3").revisions).default;
        "hls-class-plugin".revision = (((hackage."hls-class-plugin")."1.0.1.0").revisions).default;
        "hls-eval-plugin".revision = (((hackage."hls-eval-plugin")."1.1.2.0").revisions).default;
        "hls-eval-plugin".flags.pedantic = false;
        "githash".revision = (((hackage."githash")."0.1.6.2").revisions).default;
        "megaparsec".revision = (((hackage."megaparsec")."9.2.0").revisions).default;
        "megaparsec".flags.dev = false;
        "primes".revision = (((hackage."primes")."0.2.1.0").revisions).default;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.tagged = true;
        "distributive".flags.semigroups = true;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.6").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."1.0.1.0").revisions).default;
        "tasty-rerun".revision = (((hackage."tasty-rerun")."1.1.18").revisions).default;
        "data-default-instances-containers".revision = (((hackage."data-default-instances-containers")."0.0.1").revisions).default;
        "cryptohash-md5".revision = (((hackage."cryptohash-md5")."0.11.100.1").revisions).default;
        "cpphs".revision = (((hackage."cpphs")."1.20.9.1").revisions).default;
        "cpphs".flags.old-locale = false;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.4").revisions).default;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.bench = true;
        "vector-algorithms".flags.boundschecks = true;
        "vector-algorithms".flags.properties = true;
        "happy".revision = (((hackage."happy")."1.20.0").revisions).default;
        "base".revision = (((hackage."base")."4.14.3.0").revisions).default;
        "blaze-markup".revision = (((hackage."blaze-markup")."0.8.2.8").revisions).default;
        "network-uri".revision = (((hackage."network-uri")."2.6.4.1").revisions).default;
        "foldl".revision = (((hackage."foldl")."1.4.12").revisions).default;
        "Diff".revision = (((hackage."Diff")."0.4.0").revisions).default;
        "cmdargs".revision = (((hackage."cmdargs")."0.10.21").revisions).default;
        "cmdargs".flags.testprog = false;
        "cmdargs".flags.quotation = true;
        "optparse-simple".revision = (((hackage."optparse-simple")."0.1.1.4").revisions).default;
        "optparse-simple".flags.build-example = false;
        "rts".revision = (((hackage."rts")."1.0.1").revisions).default;
        "hie-compat".revision = (((hackage."hie-compat")."0.2.1.0").revisions).default;
        "hie-compat".flags.ghc-lib = false;
        "text".revision = (((hackage."text")."1.2.4.1").revisions).default;
        "aeson-pretty".revision = (((hackage."aeson-pretty")."0.8.8").revisions).default;
        "aeson-pretty".flags.lib-only = false;
        "tasty-golden".revision = (((hackage."tasty-golden")."2.3.4").revisions).default;
        "tasty-golden".flags.build-example = false;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "js-flot".revision = (((hackage."js-flot")."0.8.3").revisions).default;
        "time".revision = (((hackage."time")."1.9.3").revisions).default;
        "hls-haddock-comments-plugin".revision = (((hackage."hls-haddock-comments-plugin")."1.0.0.3").revisions).default;
        "uuid".revision = (((hackage."uuid")."1.3.15").revisions).default;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.14.0").revisions).default;
        "unordered-containers".flags.debug = false;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "tasty-expected-failure".revision = (((hackage."tasty-expected-failure")."0.12.3").revisions).default;
        "parser-combinators".revision = (((hackage."parser-combinators")."1.3.0").revisions).default;
        "parser-combinators".flags.dev = false;
        "pretty-simple".revision = (((hackage."pretty-simple")."4.0.0.0").revisions).default;
        "pretty-simple".flags.buildexe = false;
        "pretty-simple".flags.buildexample = false;
        "fuzzy".revision = (((hackage."fuzzy")."0.1.0.1").revisions).default;
        "charset".revision = (((hackage."charset")."0.3.8").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "dependent-sum-template".revision = (((hackage."dependent-sum-template")."0.1.0.3").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.2").revisions).default;
        "typed-process".revision = (((hackage."typed-process")."0.2.6.3").revisions).default;
        "czipwith".revision = (((hackage."czipwith")."1.0.1.3").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.5").revisions).default;
        "contravariant".flags.tagged = true;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.statevar = true;
        "case-insensitive".revision = (((hackage."case-insensitive")."1.2.1.0").revisions).default;
        "constraints-extras".revision = (((hackage."constraints-extras")."0.3.1.0").revisions).default;
        "constraints-extras".flags.build-readme = true;
        "unsafe".revision = (((hackage."unsafe")."0.0").revisions).default;
        "unliftio".revision = (((hackage."unliftio")."0.2.20").revisions).default;
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.split-base = true;
        "wcwidth".flags.cli = false;
        "microlens-th".revision = (((hackage."microlens-th")."0.4.3.10").revisions).default;
        "fingertree".revision = (((hackage."fingertree")."0.1.4.2").revisions).default;
        "bytestring".revision = (((hackage."bytestring")."0.10.12.0").revisions).default;
        "hls-stylish-haskell-plugin".revision = (((hackage."hls-stylish-haskell-plugin")."1.0.0.2").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "reflection".revision = (((hackage."reflection")."2.1.6").revisions).default;
        "reflection".flags.slow = false;
        "reflection".flags.template-haskell = true;
        "hyphenation".revision = (((hackage."hyphenation")."0.8.2").revisions).default;
        "hyphenation".flags.embed = true;
        "polyparse".revision = (((hackage."polyparse")."1.13").revisions).default;
        "ghc-paths".revision = (((hackage."ghc-paths")."0.1.0.12").revisions).default;
        "brittany".revision = (((hackage."brittany")."0.13.1.2").revisions).default;
        "brittany".flags.brittany-dev-lib = false;
        "brittany".flags.brittany-test-perf = false;
        "setenv".revision = (((hackage."setenv")."0.1.1.3").revisions).default;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "utf8-string".revision = (((hackage."utf8-string")."1.0.2").revisions).default;
        "ghc".revision = (((hackage."ghc")."8.10.7").revisions).default;
        "lens".revision = (((hackage."lens")."5.0.1").revisions).default;
        "lens".flags.test-templates = true;
        "lens".flags.test-hunit = true;
        "lens".flags.benchmark-uniplate = false;
        "lens".flags.inlining = true;
        "lens".flags.trustworthy = true;
        "lens".flags.test-properties = true;
        "lens".flags.dump-splices = false;
        "lens".flags.j = false;
        "containers".revision = (((hackage."containers")."0.6.5.1").revisions).default;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.5").revisions).default;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.comonad = true;
        "semigroupoids".flags.contravariant = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.unordered-containers = true;
        "haddock-library".revision = (((hackage."haddock-library")."1.10.0").revisions).default;
        "tf-random".revision = (((hackage."tf-random")."0.5").revisions).default;
        "ghcide".revision = (((hackage."ghcide")."1.4.2.3").revisions).default;
        "ghcide".flags.ghc-patched-unboxed-bytecode = false;
        "some".revision = (((hackage."some")."1.0.2").revisions).default;
        "some".flags.newtype-unsafe = true;
        "shake".revision = (((hackage."shake")."0.19.6").revisions).default;
        "shake".flags.cloud = false;
        "shake".flags.portable = false;
        "shake".flags.embed-files = false;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.deepseq = true;
        "tagged".flags.transformers = true;
        "ghc-lib-parser".revision = (((hackage."ghc-lib-parser")."8.10.7.20210828").revisions).default;
        "haskell-src-exts".revision = (((hackage."haskell-src-exts")."1.23.1").revisions).default;
        "ghc-lib-parser-ex".revision = (((hackage."ghc-lib-parser-ex")."8.10.0.23").revisions).default;
        "ghc-lib-parser-ex".flags.auto = true;
        "ghc-lib-parser-ex".flags.no-ghc-lib = false;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.5").revisions).default;
        "prettyprinter-ansi-terminal".revision = (((hackage."prettyprinter-ansi-terminal")."1.1.3").revisions).default;
        "primitive".revision = (((hackage."primitive")."0.7.2.0").revisions).default;
        "hls-brittany-plugin".revision = (((hackage."hls-brittany-plugin")."1.0.1.0").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.0").revisions).default;
        "HsYAML-aeson".revision = (((hackage."HsYAML-aeson")."0.2.0.0").revisions).default;
        "random-shuffle".revision = (((hackage."random-shuffle")."0.0.4").revisions).default;
        "lsp-types".revision = (((hackage."lsp-types")."1.3.0.1").revisions).default;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.7").revisions).default;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.generic-deriving = true;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.three = false;
        "transformers-compat".flags.mtl = true;
        "profunctors".revision = (((hackage."profunctors")."5.6.2").revisions).default;
        "stylish-haskell".revision = (((hackage."stylish-haskell")."0.13.0.0").revisions).default;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.4.3.0").revisions).default;
        "js-dgtable".revision = (((hackage."js-dgtable")."0.5.2").revisions).default;
        "microlens".revision = (((hackage."microlens")."0.4.12.0").revisions).default;
        "resourcet".revision = (((hackage."resourcet")."1.2.4.3").revisions).default;
        "aeson".revision = (((hackage."aeson")."1.5.6.0").revisions).default;
        "aeson".flags.developer = false;
        "aeson".flags.bytestring-builder = false;
        "aeson".flags.fast = false;
        "aeson".flags.cffi = false;
        "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.8").revisions).default;
        "implicit-hie".revision = (((hackage."implicit-hie")."0.1.2.6").revisions).default;
        "multistate".revision = (((hackage."multistate")."0.8.0.3").revisions).default;
        "multistate".flags.build-example = false;
        "hls-call-hierarchy-plugin".revision = (((hackage."hls-call-hierarchy-plugin")."1.0.1.0").revisions).default;
        "data-default".revision = (((hackage."data-default")."0.7.1.1").revisions).default;
        "hie-bios".revision = (((hackage."hie-bios")."0.7.6").revisions).default;
        "hls-splice-plugin".revision = (((hackage."hls-splice-plugin")."1.0.0.4").revisions).default;
        "semigroups".revision = (((hackage."semigroups")."0.19.2").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.tagged = true;
        "semigroups".flags.template-haskell = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.transformers = true;
        "semigroups".flags.hashable = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "uniplate".revision = (((hackage."uniplate")."1.6.13").revisions).default;
        "parsec".revision = (((hackage."parsec")."3.1.14.0").revisions).default;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."8.10.7").revisions).default;
        "libyaml".revision = (((hackage."libyaml")."0.1.2").revisions).default;
        "libyaml".flags.system-libyaml = false;
        "libyaml".flags.no-unicode = false;
        "network-bsd".revision = (((hackage."network-bsd")."2.8.1.0").revisions).default;
        "generic-lens-core".revision = (((hackage."generic-lens-core")."2.2.0.0").revisions).default;
        "hls-test-utils".revision = (((hackage."hls-test-utils")."1.1.0.0").revisions).default;
        "hls-test-utils".flags.pedantic = false;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.3").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "filepattern".revision = (((hackage."filepattern")."0.1.2").revisions).default;
        "ghc-exactprint".revision = (((hackage."ghc-exactprint")."0.6.4").revisions).default;
        "ghc-exactprint".flags.dev = false;
        "ghc-exactprint".flags.roundtrip = false;
        "gitrev".revision = (((hackage."gitrev")."1.3.1").revisions).default;
        "hspec-core".revision = (((hackage."hspec-core")."2.7.10").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "opentelemetry".revision = (((hackage."opentelemetry")."0.7.0").revisions).default;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "tasty".revision = (((hackage."tasty")."1.4.2").revisions).default;
        "tasty".flags.unix = true;
        "tasty".flags.clock = true;
        "deepseq".revision = (((hackage."deepseq")."1.4.4.0").revisions).default;
        "kan-extensions".revision = (((hackage."kan-extensions")."5.2.3").revisions).default;
        "indexed-profunctors".revision = (((hackage."indexed-profunctors")."0.1.1").revisions).default;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "deque".revision = (((hackage."deque")."0.4.4").revisions).default;
        "attoparsec".revision = (((hackage."attoparsec")."0.13.2.5").revisions).default;
        "attoparsec".flags.developer = false;
        "generic-lens".revision = (((hackage."generic-lens")."2.2.0.0").revisions).default;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "blaze-textual".revision = (((hackage."blaze-textual")."0.2.2.1").revisions).default;
        "blaze-textual".flags.native = true;
        "blaze-textual".flags.integer-simple = false;
        "blaze-textual".flags.developer = false;
        "file-embed".revision = (((hackage."file-embed")."0.0.15.0").revisions).default;
        "floskell".revision = (((hackage."floskell")."0.10.5").revisions).default;
        "colour".revision = (((hackage."colour")."2.3.6").revisions).default;
        "terminfo".revision = (((hackage."terminfo")."0.4.1.4").revisions).default;
        "syb".revision = (((hackage."syb")."0.7.2.1").revisions).default;
        "hls-ormolu-plugin".revision = (((hackage."hls-ormolu-plugin")."1.0.1.0").revisions).default;
        "safe-exceptions".revision = (((hackage."safe-exceptions")."0.1.7.2").revisions).default;
        "invariant".revision = (((hackage."invariant")."0.5.4").revisions).default;
        "dependent-map".revision = (((hackage."dependent-map")."0.4.0.0").revisions).default;
        "ghc-api-compat".revision = (((hackage."ghc-api-compat")."8.10.7").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.3.4.1").revisions).default;
        "hashable".flags.integer-gmp = true;
        "hashable".flags.random-initial-seed = false;
        "refinery".revision = (((hackage."refinery")."0.4.0.0").revisions).default;
        "clock".revision = (((hackage."clock")."0.8.2").revisions).default;
        "clock".flags.llvm = false;
        "adjunctions".revision = (((hackage."adjunctions")."4.4").revisions).default;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.distributive = true;
        "comonad".flags.indexed-traversable = true;
        "comonad".flags.containers = true;
        "retrie".revision = (((hackage."retrie")."1.0.0.0").revisions).default;
        "retrie".flags.buildexecutable = true;
        "ghc-heap".revision = (((hackage."ghc-heap")."8.10.7").revisions).default;
        "ghci".revision = (((hackage."ghci")."8.10.7").revisions).default;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "sqlite-simple".revision = (((hackage."sqlite-simple")."0.4.18.0").revisions).default;
        "regex-base".revision = (((hackage."regex-base")."0.94.0.1").revisions).default;
        "fourmolu".revision = (((hackage."fourmolu")."0.3.0.0").revisions).default;
        "fourmolu".flags.dev = false;
        "hls-tactics-plugin".revision = (((hackage."hls-tactics-plugin")."1.4.0.0").revisions).default;
        "hls-tactics-plugin".flags.pedantic = false;
        "type-equality".revision = (((hackage."type-equality")."1").revisions).default;
        "filemanip".revision = (((hackage."filemanip")."0.3.6.3").revisions).default;
        "Cabal".revision = (((hackage."Cabal")."3.2.1.0").revisions).default;
        "hspec".revision = (((hackage."hspec")."2.7.10").revisions).default;
        "ghc-source-gen".revision = (((hackage."ghc-source-gen")."0.4.2.0").revisions).default;
        "unagi-chan".revision = (((hackage."unagi-chan")."0.4.1.3").revisions).default;
        "unagi-chan".flags.compare-benchmarks = false;
        "network-info".revision = (((hackage."network-info")."0.2.0.10").revisions).default;
        "th-compat".revision = (((hackage."th-compat")."0.1.3").revisions).default;
        "mmorph".revision = (((hackage."mmorph")."1.2.0").revisions).default;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.1").revisions).default;
        "zlib".revision = (((hackage."zlib")."0.6.2.3").revisions).default;
        "zlib".flags.non-blocking-ffi = false;
        "zlib".flags.bundled-c-zlib = false;
        "zlib".flags.pkg-config = false;
        "hls-pragmas-plugin".revision = (((hackage."hls-pragmas-plugin")."1.0.1.0").revisions).default;
        "MonadRandom".revision = (((hackage."MonadRandom")."0.5.3").revisions).default;
        "ghc-trace-events".revision = (((hackage."ghc-trace-events")."0.1.2.3").revisions).default;
        "indexed-traversable-instances".revision = (((hackage."indexed-traversable-instances")."0.1").revisions).default;
        "data-default-instances-dlist".revision = (((hackage."data-default-instances-dlist")."0.0.1").revisions).default;
        "hiedb".revision = (((hackage."hiedb")."0.4.0.0").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.12.0").revisions).default;
        "extra".revision = (((hackage."extra")."1.7.9").revisions).default;
        "old-locale".revision = (((hackage."old-locale")."1.0.0.7").revisions).default;
        "split".revision = (((hackage."split")."0.2.3.4").revisions).default;
        "StateVar".revision = (((hackage."StateVar")."1.2.2").revisions).default;
        "HsYAML".revision = (((hackage."HsYAML")."0.2.1.0").revisions).default;
        "HsYAML".flags.exe = false;
        "atomic-primops".revision = (((hackage."atomic-primops")."0.8.4").revisions).default;
        "atomic-primops".flags.debug = false;
        "stm".revision = (((hackage."stm")."2.5.0.1").revisions).default;
        };
      compiler = {
        version = "8.10.7";
        nix-name = "ghc8107";
        packages = {
          "binary" = "0.8.8.0";
          "ghc-boot" = "8.10.7";
          "ghc-prim" = "0.6.1";
          "exceptions" = "0.10.4";
          "array" = "0.5.4.0";
          "integer-gmp" = "1.0.3.0";
          "template-haskell" = "2.16.0.0";
          "pretty" = "1.1.3.6";
          "process" = "1.6.13.2";
          "hpc" = "0.6.1.0";
          "base" = "4.14.3.0";
          "rts" = "1.0.1";
          "text" = "1.2.4.1";
          "mtl" = "2.2.2";
          "time" = "1.9.3";
          "unix" = "2.7.2.2";
          "bytestring" = "0.10.12.0";
          "ghc" = "8.10.7";
          "containers" = "0.6.5.1";
          "directory" = "1.3.6.0";
          "parsec" = "3.1.14.0";
          "ghc-boot-th" = "8.10.7";
          "filepath" = "1.4.2.1";
          "deepseq" = "1.4.4.0";
          "transformers" = "0.5.6.2";
          "terminfo" = "0.4.1.4";
          "ghc-heap" = "8.10.7";
          "ghci" = "8.10.7";
          "Cabal" = "3.2.1.0";
          "stm" = "2.5.0.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        haskell-language-server = ./.plan.nix/haskell-language-server.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "haskell-language-server" = {
            flags = {
              "brittany" = lib.mkOverride 900 true;
              "stylishhaskell" = lib.mkOverride 900 true;
              "importlens" = lib.mkOverride 900 true;
              "ormolu" = lib.mkOverride 900 true;
              "splice" = lib.mkOverride 900 true;
              "retrie" = lib.mkOverride 900 true;
              "fourmolu" = lib.mkOverride 900 true;
              "all-formatters" = lib.mkOverride 900 false;
              "hlint" = lib.mkOverride 900 true;
              "eval" = lib.mkOverride 900 true;
              "class" = lib.mkOverride 900 true;
              "haddockcomments" = lib.mkOverride 900 true;
              "all-plugins" = lib.mkOverride 900 false;
              "pragmas" = lib.mkOverride 900 true;
              "pedantic" = lib.mkOverride 900 false;
              "rename" = lib.mkOverride 900 false;
              "floskell" = lib.mkOverride 900 true;
              "tactic" = lib.mkOverride 900 true;
              "modulename" = lib.mkOverride 900 true;
              "callhierarchy" = lib.mkOverride 900 true;
              "refineimports" = lib.mkOverride 900 true;
              };
            };
          };
        })
    ({ lib, ... }:
      {
        packages = {
          "ghc-lib-parser".components.library.planned = lib.mkOverride 900 true;
          "haskell-src-exts".components.library.planned = lib.mkOverride 900 true;
          "shake".components.library.planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "tf-random".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.library.planned = lib.mkOverride 900 true;
          "haddock-library".components.library.planned = lib.mkOverride 900 true;
          "ghc-lib-parser-ex".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "hslogger".components.library.planned = lib.mkOverride 900 true;
          "lucid".components.library.planned = lib.mkOverride 900 true;
          "rope-utf16-splay".components.library.planned = lib.mkOverride 900 true;
          "streaming-commons".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.tests."wrapper-test".planned = lib.mkOverride 900 true;
          "dependent-sum".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "data-tree-print".components.library.planned = lib.mkOverride 900 true;
          "heaps".components.library.planned = lib.mkOverride 900 true;
          "lsp".components.library.planned = lib.mkOverride 900 true;
          "hlint".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "butcher".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "refact".components.library.planned = lib.mkOverride 900 true;
          "ghc-check".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-sha1".components.library.planned = lib.mkOverride 900 true;
          "regex-tdfa".components.library.planned = lib.mkOverride 900 true;
          "hashtables".components.library.planned = lib.mkOverride 900 true;
          "monoid-subclasses".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.exes."aeson-pretty".planned = lib.mkOverride 900 true;
          "ghc-trace-events".components.library.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "HsYAML".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.tests."func-test".planned = lib.mkOverride 900 true;
          "shake".components.exes."shake".planned = lib.mkOverride 900 true;
          "atomic-primops".components.library.planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.exes."haskell-language-server".planned = lib.mkOverride 900 true;
          "hiedb".components.exes."hiedb".planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "extra".components.library.planned = lib.mkOverride 900 true;
          "brittany".components.exes."brittany".planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "retrie".components.exes."retrie".planned = lib.mkOverride 900 true;
          "hlint".components.exes."hlint".planned = lib.mkOverride 900 true;
          "fourmolu".components.exes."fourmolu".planned = lib.mkOverride 900 true;
          "stylish-haskell".components.exes."stylish-haskell".planned = lib.mkOverride 900 true;
          "data-default-instances-dlist".components.library.planned = lib.mkOverride 900 true;
          "hiedb".components.library.planned = lib.mkOverride 900 true;
          "cpphs".components.exes."cpphs".planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.exes."hspec-discover".planned = lib.mkOverride 900 true;
          "MonadRandom".components.library.planned = lib.mkOverride 900 true;
          "hscolour".components.exes."HsColour".planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.exes."ghcide-test-preprocessor".planned = lib.mkOverride 900 true;
          "sqlite-simple".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "retrie".components.library.planned = lib.mkOverride 900 true;
          "fourmolu".components.library.planned = lib.mkOverride 900 true;
          "type-equality".components.library.planned = lib.mkOverride 900 true;
          "hls-tactics-plugin".components.library.planned = lib.mkOverride 900 true;
          "zlib".components.library.planned = lib.mkOverride 900 true;
          "hls-pragmas-plugin".components.library.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "unagi-chan".components.library.planned = lib.mkOverride 900 true;
          "hspec".components.library.planned = lib.mkOverride 900 true;
          "ghc-source-gen".components.library.planned = lib.mkOverride 900 true;
          "network-info".components.library.planned = lib.mkOverride 900 true;
          "filemanip".components.library.planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "regex-base".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.exes."ghcide-bench".planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "deque".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "ghc-api-compat".components.library.planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "refinery".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "generic-lens".components.library.planned = lib.mkOverride 900 true;
          "floskell".components.library.planned = lib.mkOverride 900 true;
          "file-embed".components.library.planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "hls-ormolu-plugin".components.library.planned = lib.mkOverride 900 true;
          "syb".components.library.planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "blaze-textual".components.library.planned = lib.mkOverride 900 true;
          "dependent-map".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.setup.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "unix-compat".components.library.planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "hls-retrie-plugin".components.library.planned = lib.mkOverride 900 true;
          "hls-explicit-imports-plugin".components.library.planned = lib.mkOverride 900 true;
          "hls-fourmolu-plugin".components.library.planned = lib.mkOverride 900 true;
          "hscolour".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "conduit-parse".components.library.planned = lib.mkOverride 900 true;
          "apply-refact".components.exes."refactor".planned = lib.mkOverride 900 true;
          "apply-refact".components.library.planned = lib.mkOverride 900 true;
          "hls-floskell-plugin".components.library.planned = lib.mkOverride 900 true;
          "direct-sqlite".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "hls-module-name-plugin".components.library.planned = lib.mkOverride 900 true;
          "ormolu".components.library.planned = lib.mkOverride 900 true;
          "Glob".components.library.planned = lib.mkOverride 900 true;
          "hls-graph".components.library.planned = lib.mkOverride 900 true;
          "conduit".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-old-locale".components.library.planned = lib.mkOverride 900 true;
          "hls-refine-imports-plugin".components.library.planned = lib.mkOverride 900 true;
          "algebraic-graphs".components.library.planned = lib.mkOverride 900 true;
          "hls-plugin-api".components.library.planned = lib.mkOverride 900 true;
          "constraints".components.library.planned = lib.mkOverride 900 true;
          "network".components.library.planned = lib.mkOverride 900 true;
          "implicit-hie-cradle".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "monad-memo".components.library.planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "HUnit".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "psqueues".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "hspec-expectations".components.library.planned = lib.mkOverride 900 true;
          "hls-hlint-plugin".components.library.planned = lib.mkOverride 900 true;
          "yaml".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "heapsize".components.library.planned = lib.mkOverride 900 true;
          "bytestring-encoding".components.library.planned = lib.mkOverride 900 true;
          "conduit-extra".components.library.planned = lib.mkOverride 900 true;
          "lsp-test".components.library.planned = lib.mkOverride 900 true;
          "monad-dijkstra".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "retrie".components.exes."demo".planned = lib.mkOverride 900 true;
          "parsers".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          "terminal-size".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.exes."haskell-language-server-wrapper".planned = lib.mkOverride 900 true;
          "js-jquery".components.library.planned = lib.mkOverride 900 true;
          "strict-list".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "sorted-list".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "blaze-builder".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "hyphenation".components.library.planned = lib.mkOverride 900 true;
          "setenv".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "utf8-string".components.library.planned = lib.mkOverride 900 true;
          "ansi-wl-pprint".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "polyparse".components.library.planned = lib.mkOverride 900 true;
          "ghc-paths".components.setup.planned = lib.mkOverride 900 true;
          "fingertree".components.library.planned = lib.mkOverride 900 true;
          "microlens-th".components.library.planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "brittany".components.library.planned = lib.mkOverride 900 true;
          "ghc-paths".components.library.planned = lib.mkOverride 900 true;
          "hls-stylish-haskell-plugin".components.library.planned = lib.mkOverride 900 true;
          "ormolu".components.exes."ormolu".planned = lib.mkOverride 900 true;
          "fuzzy".components.library.planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "floskell".components.exes."floskell".planned = lib.mkOverride 900 true;
          "hie-bios".components.exes."hie-bios".planned = lib.mkOverride 900 true;
          "unsafe".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.exes."ghcide".planned = lib.mkOverride 900 true;
          "dependent-sum-template".components.library.planned = lib.mkOverride 900 true;
          "unliftio".components.library.planned = lib.mkOverride 900 true;
          "wcwidth".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.exes."readme".planned = lib.mkOverride 900 true;
          "typed-process".components.library.planned = lib.mkOverride 900 true;
          "czipwith".components.library.planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "charset".components.library.planned = lib.mkOverride 900 true;
          "alex".components.exes."alex".planned = lib.mkOverride 900 true;
          "constraints-extras".components.library.planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.library.planned = lib.mkOverride 900 true;
          "hie-compat".components.library.planned = lib.mkOverride 900 true;
          "blaze-markup".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "cmdargs".components.library.planned = lib.mkOverride 900 true;
          "Diff".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "uuid".components.library.planned = lib.mkOverride 900 true;
          "network-uri".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "tasty-golden".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "parser-combinators".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.library.planned = lib.mkOverride 900 true;
          "tasty-expected-failure".components.library.planned = lib.mkOverride 900 true;
          "hls-haddock-comments-plugin".components.library.planned = lib.mkOverride 900 true;
          "optparse-simple".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "js-flot".components.library.planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.setup.planned = lib.mkOverride 900 true;
          "data-default-instances-containers".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter".components.library.planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "tasty-rerun".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-md5".components.library.planned = lib.mkOverride 900 true;
          "primes".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "tasty-hunit".components.library.planned = lib.mkOverride 900 true;
          "hls-class-plugin".components.library.planned = lib.mkOverride 900 true;
          "hls-eval-plugin".components.library.planned = lib.mkOverride 900 true;
          "th-extras".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-io".components.library.planned = lib.mkOverride 900 true;
          "cpphs".components.library.planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "megaparsec".components.library.planned = lib.mkOverride 900 true;
          "githash".components.library.planned = lib.mkOverride 900 true;
          "ghc-exactprint".components.library.planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "unbounded-delays".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "opentelemetry".components.library.planned = lib.mkOverride 900 true;
          "indexed-profunctors".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "hspec-core".components.library.planned = lib.mkOverride 900 true;
          "gitrev".components.library.planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "network-bsd".components.library.planned = lib.mkOverride 900 true;
          "hls-test-utils".components.library.planned = lib.mkOverride 900 true;
          "generic-lens-core".components.library.planned = lib.mkOverride 900 true;
          "filepattern".components.library.planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "uniplate".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "multistate".components.library.planned = lib.mkOverride 900 true;
          "hls-call-hierarchy-plugin".components.library.planned = lib.mkOverride 900 true;
          "hls-splice-plugin".components.library.planned = lib.mkOverride 900 true;
          "hie-bios".components.library.planned = lib.mkOverride 900 true;
          "data-default".components.library.planned = lib.mkOverride 900 true;
          "libyaml".components.library.planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "implicit-hie".components.library.planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "microlens".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "implicit-hie".components.exes."gen-hie".planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "hls-brittany-plugin".components.library.planned = lib.mkOverride 900 true;
          "js-dgtable".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "stylish-haskell".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "random-shuffle".components.library.planned = lib.mkOverride 900 true;
          "lsp-types".components.library.planned = lib.mkOverride 900 true;
          "HsYAML-aeson".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }