# Use small container and not VM:
sudo: false

# Choose a build environment:
dist: xenial

# Only clone the repository tip & track all branches
git:
  depth: false

notifications:
  slack:
    rooms:
      secure: VYkYJktT9Cu/aRGQccZrFdjqgFZKq65k5CIMF3i2QmMfwXVzgFojY2XyRP+VB/idopI3iAtMz81dHXUBNyX50JtftFRL4R3ic+7eqDJu30E9kerjDbFeveISVLLTTTvuG13sME6UclgKycF9Cma68Q9+MqSxCMNnu1X8LvqKofZLG2xy9UMUzJx39a9D/+oyQUtpNRopxxvG9bpyOoOp9H+lJLlDiiBpNea07l0r+9XlgfbM1UiqdxBuZMzbWoOE2QKv+JBj1PrHyS0LNwnbM6k6VNx0BWMa3C9NSnvKp7vF0aOSR9UslCjAcE/eg8xzNu/A/xNhgxF30Uc4rzH99E7f4z+G4/Qure2p+Y+jz0IBtsmLDfHWwEL2BPyaqTbMwEJz8oYKYYrb9UtjYLvn4LtbgtwAqqDgbdpMlS5pB5P/klblDsR3YsKkLwYPfZeAKXyLfMMuVpEILE7nS9ntyjw5I6tCK23PryeuJQad34C7iFQXeC42WvgYV5x+F+ZbFaY58GdVWER5X66yp4Jxgo2uo0tCdjpN8PlgQOjDSl7tgMBFcLu+TXhpYZQ1Kr/nV2f2Nb2+MDs5Eb/05yTeZzNBMzMLbKNZcAJgP3kyAAgnkUuDaVYLUcZ2q5CJkokWLWTg6fLzcoNZ1kdmtU14FwOuj0sczO42AiAqYP4EOls=
    on_pull_requests: false
    on_success: change # Send a Slack notification when the build goes from failed to success (and vice-versa)
    on_error: always # Send a Slack notification when the build is failing on master
    email: false

env:
  global:
    - WALLET_CLI_JORMUNGANDR=$HOME/.local/bin/cardano-wallet-jormungandr
    - WALLET_CLI_JORMUNGANDR_CHECKSUM=$HOME/.local/bin/cardano-wallet-jormungandr.sha256
    - WALLET_CLI_JORMUNGANDR_TARGZ=$HOME/.local/bin/cardano-wallet-jormungandr.tar.gz
    - WALLET_CLI_HTTP_BRIDGE=$HOME/.local/bin/cardano-wallet-http-bridge
    - WALLET_CLI_HTTP_BRIDGE_CHECKSUM=$HOME/.local/bin/cardano-wallet-http-bridge.sha256
    - WALLET_CLI_HTTP_BRIDGE_TARGZ=$HOME/.local/bin/cardano-wallet-http-bridge.tar.gz
    - STACK_WORK_CACHE=$HOME/.stack/stack-work.tar.gz
    - PATH=$PATH:$HOME/.local/bin
    - LOCAL_MIX_DIR=.stack-work/dist/x86_64-linux/Cabal-2.4.0.1/hpc/

# We use a hybrid setup with Rust and Haskell, so we handle the compilation ourselves
language: generic

# Deactivate builds on branches but `master` and the bors branches.
# CI is still triggered by PRs).
# We do also CI to kick in when pushing a tag `git push --tags` for releases.
if: "(branch IN (master, bors/staging, bors/trying)) OR (tag =~ ^v)"

# Caching so the next build will be fast too:
cache:
  timeout: 1337
  directories:
  - $HOME/.stack

before_cache:
  - rm -rf $HOME/.stack/programs/x86_64-linux/ghc-*.tar.*
  - rm -rf $HOME/.stack/indices/Hackage/00-index.tar $HOME/.stack/indices/Hackage/00-index.tar.gz
  - find $HOME/.stack/programs/x86_64-linux/ghc-*/lib/ghc-* -type f -name *_p.a -delete

before_install:
  - mkdir -p $HOME/.local/bin
  - tar xzf $STACK_WORK_CACHE || echo "no .stack-work yet"
  - travis_retry curl -L https://raw.githubusercontent.com/input-output-hk/cardano-wallet/master/lib/http-bridge/test/data/cardano-node-simple/cardano-node-simple-3.0.1.tar.gz | tar xz -C $HOME/.local/bin
  - cardano-node-simple --version
  - travis_retry curl -L https://github.com/KtorZ/cardano-http-bridge/releases/download/v0.0.5/cardano-http-bridge-v0.0.5-x86_64-linux.tar.gz | tar xz -C $HOME/.local/bin
  - cardano-http-bridge --version
  - travis_retry curl -L https://github.com/input-output-hk/jormungandr/releases/download/v0.3.3/jormungandr-v0.3.3-x86_64-unknown-linux-gnu.tar.gz | tar xz -C $HOME/.local/bin
  - jcli --version && jormungandr --version
  - travis_retry curl -L https://github.com/commercialhaskell/stack/releases/download/v1.9.3/stack-1.9.3-linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/stack'
  - travis_retry stack --no-terminal setup

# Ensure necessary system libraries are present:
addons:
  apt:
    packages:
      - libgmp-dev
      - librocksdb-dev
      - libsystemd-dev

service:
  - docker

# Define custom set of stages
stages:
- cache üíæ
- build project üî®
- checks üî¨
- integration üñáÔ∏è
- deploy üöÄ

jobs:
  fast_finish: true
  include:
  ################################################################################
  #
  # PR
  #
  # Pipeline we run on each PR. Slightly different from the pipeline we run when
  # stuff get merged into `master`. In this setup, we do want a quick feedback, and
  # we therefore parallelize as much as we can using many different jobs. We also
  # avoid options like `--coverage` or `--haddock` on each build since those take
  # needless time.
  #
  ################################################################################
  - stage: build project üî®
    name: "Compiling Project"
    script:
    - stack clean
    - stack --no-terminal build --fast --test --no-run-tests --bench --no-run-benchmarks --haddock --no-haddock-deps
    - tar czf $STACK_WORK_CACHE .stack-work lib/**/.stack-work

  - stage: checks üî¨
    name: "Tests: integration"
    script:
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
      - stack --no-terminal test --fast --haddock --no-haddock-deps --coverage cardano-wallet-jormungandr:integration --ta '--match "/PR_DISABLED Addresses API endpoint tests/ADDRESS_LIST_01 - Can list known addresses on a default wallet/"'
