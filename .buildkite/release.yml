agents:
  queue: "cardano-wallet"

env:
  LC_ALL: "C.UTF-8"
  NIX_PATH: "channel:nixos-21.11"
  STATE_DIR: "/var/lib/buildkite-agent/cache"
  STATE_DIR_MACOS: "/var/lib/buildkite-agent-hal-mac/cache"
  RELEASE_SCRIPTS_DIR: "./scripts/buildkite/release"

  linux: "x86_64-linux"
  macos: "aarch64-darwin"

steps:
  - label: Add release commits
    key: add-release-commits
    commands: |
      ./scripts/buildkite/release/release-candidate.sh
    agents:
      system: x86_64-linux

  - label: "Generate and upload trigger step to main pipeline"
    depends_on: add-release-commits
    commands:
      - ./scripts/buildkite/release/generate-trigger.sh | buildkite-agent pipeline upload

  - label: Collect changes
    key: collect-changes
    depends_on: add-release-commits
    commands:
      - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/make_changelog.sh
    agents:
      system: x86_64-linux
    artifacts:
      - artifacts/changes.md

  - label: Compute api difference against release
    command: |
      nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/openapi-diff.sh
    artifact_paths:
      - artifacts/api-diff.md
    agents:
      system: ${linux}

  - group : Nightly
    key: nightly-or-test
    depends_on: main-pipeline-build
    steps:
      - label: Push nightly or test release tag
        key: push-nightly-or-test-tag
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-tag.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: false

      - label: Push nightly or test release
        depends_on: push-nightly-or-test-tag
        key: push-nightly-or-test-release
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-release.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: false
        concurrency: 1
        concurrency_group: push-release-nightly-or-test

      - label: Push nightly or test release artifacts
        depends_on: push-nightly-or-test-release
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-artifacts.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: false
        concurrency: 1
        concurrency_group: push-release-nightly-or-test

      - label: Push image to dockerhub
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-to-dockerhub.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: false
        concurrency: 1
        concurrency_group: push-dockerhub-nightly-or-test

  - group: Release
    depends_on: nightly-or-test
    if: build.branch == "master"
    steps:
      - block: Create a release
        key: create-release

      - label: Push release tag
        key: push-release-tag
        depends_on: create-release
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-tag.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: true

      - label: Push release
        depends_on: push-release-tag
        key: push-release
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-release.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: true
        concurrency: 1
        concurrency_group: push-release-release

      - label: Push release artifacts
        depends_on: push-release
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-artifacts.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: true
        concurrency: 1
        concurrency_group: push-release-release

      - block: Push to dockerhub
        key: push-dockerhub
        depends_on: create-release

      - label: Push to dockerhub
        depends_on: push-dockerhub
        artifact_paths:
          - ./artifacts/*.tgz
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/push-to-dockerhub.sh
        agents:
          system: x86_64-linux
        env:
          RELEASE: true
        concurrency: 1
        concurrency_group: push-dockerhub-release

      - label: Update Documentation Links
        depends_on: create-release
        commands:
          - nix develop path:$RELEASE_SCRIPTS_DIR -c $RELEASE_SCRIPTS_DIR/update-documentation-links.sh
