--------------------------------------------------------------------------------
-- Cabal project file
-- -----------------------------------------------------------------------------
--
-- Example build command:
--
--   cabal build all --enable-tests --enable-benchmarks -O0
--
-- -----------------------------------------------------------------------------
-- Updating this file
--
-- This file is the canonical source of dependencies.
-- To generate the Nix packages, use  ./nix/regenerate.sh
--
-- -----------------------------------------------------------------------------
-- How to use with the nix shell
--
-- The advantage of building under `nix develop` is that the correct
-- versions of all build and test dependencies are set up for you in the
-- nix shell environment.
--
-- Many dependencies, including Haskell package dependencies,
-- are downloaded from an IOG nix cache.
--
-- To build, start `nix develop`, then run `cabal` inside:
--
--     nix develop
--     cabal build all -O0
--
-- To build with profiling enabled, use:
--
--    nix develop .#profiled
--    cabal configure --enable-tests --enable-benchmarks --enable-profiling
--    cabal build all
--
--------------------------------------------------------------------------------

-- Custom repository for cardano haskell packages, see
-- https://github.com/intersectmbo/cardano-haskell-packages
-- for more information.
repository cardano-haskell-packages
  url: https://chap.intersectmbo.org/
  secure: True
  root-keys:
    3e0cce471cf09815f930210f7827266fd09045445d65923e6d0238a6cd15126f
    443abb7fb497a134c343faf52f0b659bd7999bc06b7f63fa76dc99d631f9bea1
    a86a1f6ce86c449c46666bda44268677abf29b5b2d2eb5ec7af903ec2f117a82
    bcec67e8e99cabfa7764d75ad9b158d72bfacf70ca1d0ec8bc6b4406d1bf8413
    c00aae8461a256275598500ea0e187588c35a5d5d7454fb57eac18d9edb86a56
    d4a35cd3121aa00d18544bb0ac01c3e1691d618f462c46129271bccf39f7e8ee

-- repeating the index-state for hackage to work around hackage.nix parsing limitation
index-state: 2024-06-29T00:00:00Z

index-state:
  , hackage.haskell.org 2024-06-29T00:00:00Z
  , cardano-haskell-packages 2024-06-29T00:00:00Z

packages:
  lib/address-derivation-discovery
  lib/api
  lib/application-extras
  lib/balance-tx/
  lib/benchmarks/
  lib/buildkite/
  lib/cardano-api-extra/
  lib/crypto-primitives/
  lib/coin-selection/
  lib/customer-deposit-wallet/
  lib/delta-chain/
  lib/delta-store/
  lib/delta-table/
  lib/delta-types/
  lib/exe/
  lib/faucet/
  lib/iohk-monitoring-extra/
  lib/integration/
  lib/launcher/
  lib/local-cluster/
  lib/network-layer/
  lib/numeric/
  lib/primitive/
  lib/read
  lib/secrets
  lib/std-gen-seed/
  lib/temporary-extra/
  lib/test-utils/
  lib/text-class/
  lib/ui/
  lib/unit/
  lib/wai-middleware-logging/
  lib/wallet-benchmarks/
  lib/wallet/
  lib/wallet-e2e/

--------------------------------------------------------------------------------
-- BEGIN OpenAPI

-- Using a fork until our patches can be merged upstream

-- TODO: ADP-1713
source-repository-package
  type: git
  location: https://github.com/biocad/servant-openapi3
  tag: 4165b837d3a71debd1059c3735460075840000b5
  --sha256: 1dngrr353kjhmwhn0b289jzqz5rf32llwcv79zcyq15ldpqpbib9

-- TODO: ADP-1713
source-repository-package
  type: git
  location: https://github.com/paolino/openapi3
  tag: f22c31611c295637a3e72b341cd1c56d1d87b993
  --sha256: 10l7wlaz9rcr3fysi1vwg7qqa826bb7nidkpx9jy1q7ja7ddw47i

-- END OpenAPI
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- BEGIN Cardano Addresses Dependency

source-repository-package
    type: git
    location: https://github.com/IntersectMBO/cardano-addresses
    tag: 2bca06deaa60e54a5322ac757387d744bf043367
    --sha256: 1y1mzfly7jac40b9g4xc078rcm5zqhc3xxv77kwxi10yph1jwq7z
    subdir: command-line
            core

-- Normally cabal won't apply ghc-options which we specify to build packages
-- to their "regular" dependencies.
-- However, the dependencies declared using the `source-repository-package`
-- pragma are an exception to this rule.
-- This is why we need to manually control options that are applied to the
-- `cardano-addresses` package by declaring them explicitly here.
package cardano-addresses-cli
    ghc-options:
        -Wwarn=deprecations

package cardano-addresses
    ghc-options:
        -Wwarn=incomplete-uni-patterns
-- END Cardano Addresses Dependency
--------------------------------------------------------------------------------

source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-sl-x509
    tag: a91add165152fa36f08e95fafe7da24f1dba4690
    --sha256: 1ia8vlqghis92cla8qmqa6kh8f3jn29b01fshyk5hmgy5373s684

source-repository-package
    type: git
    location: https://github.com/cardano-foundation/cardano-wallet-client.git
    tag: 353412ca621dc28af53e4a19795338b19bab1b7b
    --sha256: 04q58c82wy6x9nkwqbvcxbv6s61fx08h5kf62sb511aqp08id4bb
    subdir: generated

source-repository-package
    type: git
    location: https://github.com/cardano-foundation/cardano-wallet-agda
    tag: 33702851de8b846cc0bb9c48ee24c987e6d02c01
    --sha256: 0qiffp4dgz2c8wjjs4qk8g307a8li2lcczbdzinfcyxn0q01pcvy
    subdir: lib/customer-deposit-wallet-pure

-- With (semi-circular) dependency on cardano-wallet-read:
-- tag: 1b2b22f68b7535d055b91753b68c92a2b2596038
-- --sha256: 0yqga8hv66xxmd724pwyr4jdd98s5w3mc35sfzkpaywivi8g3kxx

--------------------------------------------------------------------------------
-- BEGIN Constraints tweaking section

allow-newer:
    async-timer:unliftio-core
  , servant-openapi3:*
  , katip:Win32

constraints:
    base >= 4.18.2.0 && < 5
  , openapi3 >= 3.2.0
  , persistent ^>= 2.14.6.0

  , bech32 >= 1.1.7

  -- lower versions of katip won't build with the Win32-2.12.0.1
  -- which is shipped with the ghc-9.2.8
  , katip >= 0.8.7.4


  -- Cardano Node dependencies:
  , io-classes >= 1.4
  , io-classes -asserts
  , ouroboros-consensus-cardano ^>= 0.17
  , ouroboros-network ^>= 0.16.1
  , ouroboros-network-protocols ^>= 0.9


-- Related to: https://github.com/haskell/cabal/issues/8554
if impl(ghc == 8.10.7)
  constraints: process == 1.6.13.2

-- END Constraints tweaking section
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Flags for dependencies without an S-R-P pragma should be kept in this section
-- (conversely, flags for the S-R-P dependencies should be kept within the
-- same section where an S-R-P pragma is located,
-- for them to be managed together)

-- Using RDRAND instead of /dev/urandom as an entropy source for key
-- generation is dubious. Set the flag so we use /dev/urandom by default.
package cryptonite
  flags: -support_rdrand

package cardano-config
  flags: -systemd

package cardano-node
  flags: -systemd

--------------------------------------------------------------------------------
-- Default settings for all packages
--------------------------------------------------------------------------------

-- By default, we write IDE information for all packages.
program-options
  ghc-options: -fwrite-ide-info

program-options
  ghc-options: -Wwarn=unused-packages

cabal-lib-version: 3.6
--------------------------------------------------------------------------------
-- Enable specific tests in this repo

test-show-details: direct

package cardano-wallet-buildkite
  tests: True

package delta-chain
  tests: True

package delta-store
  tests: True

package delta-types
  tests: True

package cardano-balance-tx
  tests: True

package cardano-coin-selection
  tests: True

package cardano-wallet
  tests: True

package cardano-wallet-api
  tests: True

package cardano-wallet-cli
  tests: True

package cardano-wallet-launcher
  tests: True

package cardano-wallet-network-layer
  tests: True

package cardano-wallet-primitive
  tests: True

package cardano-wallet-read
  tests: True

package cardano-wallet-text-class
  tests: True

package cardano-wallet-unit
  tests: True

package cardano-numeric
  tests: True

package cardano-wallet-integration
  tests: True

package cardano-wallet-test-utils
  tests: True

package customer-deposit-wallet
  tests: True

package std-gen-seed
  tests: True

package wai-middleware-logging
  tests: True

-- Now disable all other tests with a global flag.
-- This is what they do in cardano-node/cabal.project.

tests: False

-- -------------------------------------------------------------------------

package bitvec
   flags: -simd
