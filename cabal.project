--------------------------------------------------------------------------------
-- Cabal project file
-- -----------------------------------------------------------------------------
--
-- Example build command:
--
--   cabal build all --enable-tests --enable-benchmarks -O0
--
-- -----------------------------------------------------------------------------
-- Updating this file
--
-- This file is the canonical source of dependencies.
-- To generate the Nix packages, use  ./nix/regenerate.sh
--
-- -----------------------------------------------------------------------------
-- How to use with the nix shell
--
-- The advantage of building under `nix develop` is that the correct
-- versions of all build and test dependencies are set up for you in the
-- nix shell environment.
--
-- Many dependencies, including Haskell package dependencies,
-- are downloaded from an IOG nix cache.
--
-- To build, start `nix develop`, then run `cabal` inside:
--
--     nix develop
--     cabal build all -O0
--
-- To build with profiling enabled, use:
--
--    nix develop .#profiled
--    cabal configure --enable-tests --enable-benchmarks --enable-profiling
--    cabal build all
--
--------------------------------------------------------------------------------

-- Custom repository for cardano haskell packages, see
-- https://github.com/input-output-hk/cardano-haskell-packages
-- for more information.
repository cardano-haskell-packages
  url: https://input-output-hk.github.io/cardano-haskell-packages
  secure: True
  root-keys:
    3e0cce471cf09815f930210f7827266fd09045445d65923e6d0238a6cd15126f
    443abb7fb497a134c343faf52f0b659bd7999bc06b7f63fa76dc99d631f9bea1
    a86a1f6ce86c449c46666bda44268677abf29b5b2d2eb5ec7af903ec2f117a82
    bcec67e8e99cabfa7764d75ad9b158d72bfacf70ca1d0ec8bc6b4406d1bf8413
    c00aae8461a256275598500ea0e187588c35a5d5d7454fb57eac18d9edb86a56
    d4a35cd3121aa00d18544bb0ac01c3e1691d618f462c46129271bccf39f7e8ee

-- repeating the index-state for hackage to work around hackage.nix parsing limitation
index-state: 2023-11-26T00:00:00Z

index-state:
  , hackage.haskell.org 2023-11-26T00:00:00Z
  , cardano-haskell-packages 2023-06-05T06:39:32Z

packages:
    lib/address-derivation-discovery
  , lib/application-extras
  , lib/balance-tx/
  , lib/cardano-api-extra/
  , lib/crypto-hash-extra/
  , lib/coin-selection/
  , lib/customer-deposit-wallet/
  , lib/delta-store/
  , lib/delta-table
  , lib/delta-types/
  , lib/iohk-monitoring-extra/
  , lib/launcher/
  , lib/local-cluster/
  , lib/network-layer/
  , lib/numeric/
  , lib/primitive/
  , lib/read
  , lib/std-gen-seed/
  , lib/temporary-extra/
  , lib/test-utils/
  , lib/text-class/
  , lib/wai-middleware-logging/
  , lib/wallet-benchmarks/
  , lib/wallet/
  , lib/wallet-e2e/

-- Using RDRAND instead of /dev/urandom as an entropy source for key
-- generation is dubious. Set the flag so we use /dev/urandom by default.
package cryptonite
  flags: -support_rdrand

-- Using a fork until our patches can be merged upstream

-- TODO: ADP-1713
source-repository-package
  type: git
  location: https://github.com/biocad/servant-openapi3
  tag: 4165b837d3a71debd1059c3735460075840000b5
  --sha256: 1dngrr353kjhmwhn0b289jzqz5rf32llwcv79zcyq15ldpqpbib9

-- TODO: ADP-1713
source-repository-package
  type: git
  location: https://github.com/paolino/openapi3
  tag: f22c31611c295637a3e72b341cd1c56d1d87b993
  --sha256: 10l7wlaz9rcr3fysi1vwg7qqa826bb7nidkpx9jy1q7ja7ddw47i

source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-addresses
    tag: 44d5a9eb3505b6bfbf281d40fa88531c3253b771
    --sha256: 16rja48ryfjw3531kf15w0h3cdmscqgs8l1z1i2mvahq1vlhr2y6
    subdir: command-line
            core

package cardano-addresses
  ghc-options: -Wno-incomplete-uni-patterns

source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-sl-x509
    tag: a91add165152fa36f08e95fafe7da24f1dba4690
    --sha256: 1ia8vlqghis92cla8qmqa6kh8f3jn29b01fshyk5hmgy5373s684

source-repository-package
    type: git
    location: https://github.com/cardano-foundation/cardano-wallet-client.git
    tag: 353412ca621dc28af53e4a19795338b19bab1b7b
    --sha256: 04q58c82wy6x9nkwqbvcxbv6s61fx08h5kf62sb511aqp08id4bb
    subdir: generated

-- -------------------------------------------------------------------------
-- Constraints tweaking

-- cardano-addresses unit tests bring in some version constraint conflicts.
--
-- 1. hjsonschema and hjsonpointer deps have overly strict bounds.
-- 2. it has strict aeson < 1.5 dep - this will be fixed in the next release.
allow-newer:
    hjsonschema:*
  , hjsonpointer:*
  , *:aeson
  , *:hashable
  , async-timer:unliftio-core
  , ekg:*
  , ntp-client:*
  , libsystemd-journal:base

constraints:
    bimap >= 0.4.0
  , openapi3 >= 3.2.0
  , libsystemd-journal >= 1.4.4
  , systemd >= 2.3.0
  -- dependency of systemd-2.3.0
  , network >= 3.1.1.1
  -- choose versions that work with base >= 4.12
  , hjsonpointer >= 1.5.0
  , hjsonschema >= 1.10.0
  , Cabal >= 3.4.0.0
  , async-timer >= 0.2.0.0
  , unliftio-core >= 0.2.0.1
  , generic-arbitrary >= 0.2.2
  , iohk-monitoring >= 0.1.11

  -- lower versions of katip won't build with the Win32-2.12.0.1
  -- which is shipped with the ghc-9.2.8
  , katip >= 0.8.7.4

  -- Cardano dependencies
  -- bech32 == 1.1.4
  --   depends on optparse-applicative >= 0.18.1.0
  --   which is not compatible with 0.17.1.0
  --   due to a switch in prettyprinter dependency
  , bech32 == 1.1.4
  , optparse-applicative == 0.18.1.0

  -- Cardano Node dependencies:
  , cardano-api ^>=8.2
  , cardano-slotting >= 0.1
  , ouroboros-network ^>= 0.8.1.0

  -- TH Name shadowing warnings need to be addressed when bumping to 2.13.3.5
  , persistent == 2.13.3.3

  -- Haddock is broken in this release. Waiting for the next release

-- Related to: https://github.com/haskell/cabal/issues/8554
if impl(ghc == 8.10.7)
  constraints: process == 1.6.13.2

-- ----------------------------------------------------------------
-- Flags for dependencies

package cardano-config
  flags: -systemd
package cardano-node
  flags: -systemd

-- Fail to build if there are any unused package dependencies:
package *
  ghc-options: -Wunused-packages

-- -------------------------------------------------------------------------
-- Enable specific tests in this repo

test-show-details: direct

package delta-store
  tests: True
  ghc-options: -fwrite-ide-info

package delta-types
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-balance-tx
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-coin-selection
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-api-http
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-cli
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-launcher
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-primitive
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-text-class
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-numeric
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-integration
  tests: True
  ghc-options: -fwrite-ide-info

package cardano-wallet-test-utils
  tests: True
  ghc-options: -fwrite-ide-info

package std-gen-seed
  tests: True
  ghc-options: -fwrite-ide-info

package wai-middleware-logging
  tests: True
  ghc-options: -fwrite-ide-info

-- Now disable all other tests with a global flag.
-- This is what they do in cardano-node/cabal.project.

tests: False

-- -------------------------------------------------------------------------
