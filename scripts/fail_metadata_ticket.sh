cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/JSON golden roundtrip/JSON encoding of ApiTransactionTestnet0/produces the same JSON as is found in /home/paolino/iohk/cardano-wallet2/lib/core/test/data/Cardano/Wallet/Api/ApiTransactionTestnet0.json/"
cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/verify that every type used with JSON content type in a servant API has compatible ToJSON and ToSchema instances using validateToJSON./ApiConstructTransactionData ('Testnet 0)/"
cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/verify that every type used with JSON content type in a servant API has compatible ToJSON and ToSchema instances using validateToJSON./[ApiTransaction ('Testnet 0)]/"
cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/verify that every type used with JSON content type in a servant API has compatible ToJSON and ToSchema instances using validateToJSON./ApiTransaction ('Testnet 0)/"
cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/verify that every type used with JSON content type in a servant API has compatible ToJSON and ToSchema instances using validateToJSON./PostTransactionOldData ('Testnet 0)/"
cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/verify that every type used with JSON content type in a servant API has compatible ToJSON and ToSchema instances using validateToJSON./PostTransactionFeeOldData ('Testnet 0)/"
cabal test -O0 cardano-wallet-core:unit --test-option=--match --test-option="/Cardano.Wallet.Api.Types/verify that every type used with JSON content type in a servant API has compatible ToJSON and ToSchema instances using validateToJSON./NonEmpty (ApiTransaction ('Testnet 0))/"
